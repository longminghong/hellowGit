{\rtf1\ansi\ansicpg936\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fnil\fcharset134 STHeitiSC-Light;}
{\colortbl;\red255\green255\blue255;\red190\green0\blue4;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl480\sa240

\f0\fs28 \cf2 ICMP
\f1 \'ca\'c7
\f0 \'93Internet Control Message Protocol\'94
\f1 \'a3\'a8
\f0 Internet
\f1 \'bf\'d8\'d6\'c6\'b1\'a8\'ce\'c4\'d0\'ad\'d2\'e9\'a3\'a9\'b5\'c4\'cb\'f5\'d0\'b4\'a1\'a3\'cb\'fc\'ca\'c7
\f0 TCP/IP
\f1 \'d0\'ad\'d2\'e9\'d7\'e5\'b5\'c4\'d2\'bb\'b8\'f6\'d7\'d3\'d0\'ad\'d2\'e9\'a3\'ac\'d3\'c3\'d3\'da\'d4\'da
\f0 IP
\f1 \'d6\'f7\'bb\'fa\'a1\'a2\'c2\'b7\'d3\'c9\'c6\'f7\'d6\'ae\'bc\'e4\'b4\'ab\'b5\'dd\'bf\'d8\'d6\'c6\'cf\'fb\'cf\'a2\'a1\'a3\cf0 \'bf\'d8\'d6\'c6\'cf\'fb\'cf\'a2\'ca\'c7\'d6\'b8\'cd\'f8\'c2\'e7\'cd\'a8\'b2\'bb\'cd\'a8\'a1\'a2\'d6\'f7\'bb\'fa\'ca\'c7\'b7\'f1\'bf\'c9\'b4\'ef\'a1\'a2\'c2\'b7\'d3\'c9\'ca\'c7\'b7\'f1\'bf\'c9\'d3\'c3\'b5\'c8\'cd\'f8\'c2\'e7\'b1\'be\'c9\'ed\'b5\'c4\'cf\'fb\'cf\'a2\'a1\'a3\'d5\'e2\'d0\'a9\'bf\'d8\'d6\'c6\'cf\'fb\'cf\'a2\'cb\'e4\'c8\'bb\'b2\'a2\'b2\'bb\'b4\'ab\'ca\'e4\'d3\'c3\'bb\'a7\'ca\'fd\'be\'dd\'a3\'ac\'b5\'ab\'ca\'c7\'b6\'d4\'d3\'da\'d3\'c3\'bb\'a7\'ca\'fd\'be\'dd\'b5\'c4\'b4\'ab\'b5\'dd\'c6\'f0\'d7\'c5\'d6\'d8\'d2\'aa\'b5\'c4\'d7\'f7\'d3\'c3\'a1\'a3
\f0 \
\pard\pardeftab720\sl480\sa240

\f1 \cf0 \'ce\'d2\'c3\'c7\'d4\'da\'cd\'f8\'c2\'e7\'d6\'d0\'be\'ad\'b3\'a3\'bb\'e1\'ca\'b9\'d3\'c3\'b5\'bd
\f0 ICMP
\f1 \'d0\'ad\'d2\'e9\'a3\'ac\'d6\'bb\'b2\'bb\'b9\'fd\'ce\'d2\'c3\'c7\'be\'f5\'b2\'ec\'b2\'bb\'b5\'bd\'b6\'f8\'d2\'d1\'a1\'a3\'b1\'c8\'c8\'e7\'ce\'d2\'c3\'c7\'be\'ad\'b3\'a3\'ca\'b9\'d3\'c3\'b5\'c4\'d3\'c3\'d3\'da\'bc\'ec\'b2\'e9\'cd\'f8\'c2\'e7\'cd\'a8\'b2\'bb\'cd\'a8\'b5\'c4
\f0 Ping
\f1 \'c3\'fc\'c1\'ee\'a3\'ac\'d5\'e2\'b8\'f6
\f0 \'93Ping\'94
\f1 \'b5\'c4\'b9\'fd\'b3\'cc\'ca\'b5\'bc\'ca\'c9\'cf\'be\'cd\'ca\'c7
\f0 ICMP
\f1 \'d0\'ad\'d2\'e9\'b9\'a4\'d7\'f7\'b5\'c4\'b9\'fd\'b3\'cc\'a1\'a3\'bb\'b9\'d3\'d0\'c6\'e4\'cb\'fb\'b5\'c4\'cd\'f8\'c2\'e7\'c3\'fc\'c1\'ee\'c8\'e7\'b8\'fa\'d7\'d9\'c2\'b7\'d3\'c9\'b5\'c4
\f0 Tracert
\f1 \'c3\'fc\'c1\'ee\'d2\'b2\'ca\'c7\'bb\'f9\'d3\'da
\f0 ICMP
\f1 \'d0\'ad\'d2\'e9\'b5\'c4\'a1\'a3
\f0 \
ICMP
\f1 \'d0\'ad\'d2\'e9\'b6\'d4\'d3\'da\'cd\'f8\'c2\'e7\'b0\'b2\'c8\'ab\'be\'df\'d3\'d0\'bc\'ab\'c6\'e4\'d6\'d8\'d2\'aa\'b5\'c4\'d2\'e2\'d2\'e5\'a1\'a3
\f0 ICMP
\f1 \'d0\'ad\'d2\'e9\'b1\'be\'c9\'ed\'b5\'c4\'cc\'d8\'b5\'e3\'be\'f6\'b6\'a8\'c1\'cb\'cb\'fc\'b7\'c7\'b3\'a3\'c8\'dd\'d2\'d7\'b1\'bb\'d3\'c3\'d3\'da\'b9\'a5\'bb\'f7\'cd\'f8\'c2\'e7\'c9\'cf\'b5\'c4\'c2\'b7\'d3\'c9\'c6\'f7\'ba\'cd\'d6\'f7\'bb\'fa
\f0 .\

\f1 \'b1\'c8\'c8\'e7\'a3\'ac\'bf\'c9\'d2\'d4\'c0\'fb\'d3\'c3\'b2\'d9\'d7\'f7\'cf\'b5\'cd\'b3\'b9\'e6\'b6\'a8\'b5\'c4
\f0 ICMP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'d7\'ee\'b4\'f3\'b3\'df\'b4\'e7\'b2\'bb\'b3\'ac\'b9\'fd
\f0 64KB
\f1 \'d5\'e2\'d2\'bb\'b9\'e6\'b6\'a8\'a3\'ac\'cf\'f2\'d6\'f7\'bb\'fa\'b7\'a2\'c6\'f0
\f0 \'93Ping of Death\'94
\f1 \'a3\'a8\'cb\'c0\'cd\'f6\'d6\'ae
\f0 Ping
\f1 \'a3\'a9\'b9\'a5\'bb\'f7\'a1\'a3
\f0 \'93Ping of Death\'94 
\f1 \'b9\'a5\'bb\'f7\'b5\'c4\'d4\'ad\'c0\'ed\'ca\'c7\'a3\'ba\'c8\'e7\'b9\'fb
\f0 ICMP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'b5\'c4\'b3\'df\'b4\'e7\'b3\'ac\'b9\'fd
\f0 64KB
\f1 \'c9\'cf\'cf\'de\'ca\'b1\'a3\'ac\'d6\'f7\'bb\'fa\'be\'cd\'bb\'e1\'b3\'f6\'cf\'d6\'c4\'da\'b4\'e6\'b7\'d6\'c5\'e4\'b4\'ed\'ce\'f3\'a3\'ac\'b5\'bc\'d6\'c2
\f0 TCP/IP
\f1 \'b6\'d1\'d5\'bb\'b1\'c0\'c0\'a3\'a3\'ac\'d6\'c2\'ca\'b9\'d6\'f7\'bb\'fa\'cb\'c0\'bb\'fa\'a1\'a3
\f0 \

\f1 \'b4\'cb\'cd\'e2\'a3\'ac\'cf\'f2\'c4\'bf\'b1\'ea\'d6\'f7\'bb\'fa\'b3\'a4\'ca\'b1\'bc\'e4\'a1\'a2\'c1\'ac\'d0\'f8\'a1\'a2\'b4\'f3\'c1\'bf\'b5\'d8\'b7\'a2\'cb\'cd
\f0 ICMP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'a3\'ac\'d2\'b2\'bb\'e1\'d7\'ee\'d6\'d5\'ca\'b9\'cf\'b5\'cd\'b3\'cc\'b1\'bb\'be\'a1\'a3\'b4\'f3\'c1\'bf\'b5\'c4
\f0 ICMP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'bb\'e1\'d0\'ce\'b3\'c9
\f0 \'93ICMP
\f1 \'b7\'e7\'b1\'a9
\f0 \'94
\f1 \'a3\'ac\'ca\'b9\'b5\'c3\'c4\'bf\'b1\'ea\'d6\'f7\'bb\'fa\'ba\'c4\'b7\'d1\'b4\'f3\'c1\'bf\'b5\'c4
\f0 CPU
\f1 \'d7\'ca\'d4\'b4\'b4\'a6\'c0\'ed\'a3\'ac\'c6\'a3\'d3\'da\'b1\'bc\'c3\'fc\'a1\'a3
\f0 \
\pard\pardeftab720\sl480\sa240

\f1\b \cf0 \'ba\'da\'bf\'cd\'b5\'c4
\f0 ICMP
\f1 \'b9\'a5\'bb\'f7
\f0\b0 \
\pard\pardeftab720\sl480\sa240

\f1 \cf0 \'cb\'e4\'c8\'bb
\f0 ICMP
\f1 \'d0\'ad\'d2\'e9\'b8\'f8\'ba\'da\'bf\'cd\'d2\'d4\'bf\'c9\'b3\'cb\'d6\'ae\'bb\'fa\'a3\'ac\'b5\'ab\'ca\'c7
\f0 ICMP
\f1 \'b9\'a5\'bb\'f7\'d2\'b2\'b2\'a2\'b7\'c7\'ce\'de\'d2\'a9\'bf\'c9\'d2\'bd\'a1\'a3\'d6\'bb\'d2\'aa\'d4\'da\'c8\'d5\'b3\'a3\'cd\'f8\'c2\'e7\'b9\'dc\'c0\'ed\'d6\'d0\'ce\'b4\'d3\'ea\'b3\'f1\'e7\'d1\'a3\'ac\'cc\'e1\'c7\'b0\'d7\'f6\'ba\'c3\'d7\'bc\'b1\'b8\'a3\'ac\'be\'cd\'bf\'c9\'d2\'d4\'d3\'d0\'d0\'a7\'b5\'d8\'b1\'dc\'c3\'e2
\f0 ICMP
\f1 \'b9\'a5\'bb\'f7\'d4\'ec\'b3\'c9\'b5\'c4\'cb\'f0\'ca\'a7\'a1\'a3
\f0 \

\f1 \'b6\'d4\'d3\'da
\f0 \'93Ping of Death\'94
\f1 \'b9\'a5\'bb\'f7\'a3\'ac\'bf\'c9\'d2\'d4\'b2\'c9\'c8\'a1\'c1\'bd\'d6\'d6\'b7\'bd\'b7\'a8\'bd\'f8\'d0\'d0\'b7\'c0\'b7\'b6\'a3\'ba\'b5\'da\'d2\'bb\'d6\'d6\'b7\'bd\'b7\'a8\'ca\'c7\'d4\'da\'c2\'b7\'d3\'c9\'c6\'f7\'c9\'cf\'b6\'d4
\f0 ICMP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'bd\'f8\'d0\'d0\'b4\'f8\'bf\'ed\'cf\'de\'d6\'c6\'a3\'ac\'bd\'ab
\f0 ICMP
\f1 \'d5\'bc\'d3\'c3\'b5\'c4\'b4\'f8\'bf\'ed\'bf\'d8\'d6\'c6\'d4\'da\'d2\'bb\'b6\'a8\'b5\'c4\'b7\'b6\'ce\'a7\'c4\'da\'a3\'ac\'d5\'e2\'d1\'f9\'bc\'b4\'ca\'b9\'d3\'d0
\f0 ICMP
\f1 \'b9\'a5\'bb\'f7\'a3\'ac\'cb\'fc\'cb\'f9\'d5\'bc\'d3\'c3\'b5\'c4\'b4\'f8\'bf\'ed\'d2\'b2\'ca\'c7\'b7\'c7\'b3\'a3\'d3\'d0\'cf\'de\'b5\'c4\'a3\'ac\'b6\'d4\'d5\'fb\'b8\'f6\'cd\'f8\'c2\'e7\'b5\'c4\'d3\'b0\'cf\'ec\'b7\'c7\'b3\'a3\'c9\'d9\'a3\'bb\'b5\'da\'b6\'fe\'d6\'d6\'b7\'bd\'b7\'a8\'be\'cd\'ca\'c7\'d4\'da\'d6\'f7\'bb\'fa\'c9\'cf\'c9\'e8\'d6\'c3
\f0 ICMP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'b5\'c4\'b4\'a6\'c0\'ed\'b9\'e6\'d4\'f2\'a3\'ac\'d7\'ee\'ba\'c3\'ca\'c7\'c9\'e8\'b6\'a8\'be\'dc\'be\'f8\'cb\'f9\'d3\'d0\'b5\'c4
\f0 ICMP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'a1\'a3
\f0 \

\f1 \'c9\'e8\'d6\'c3
\f0 ICMP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'b4\'a6\'c0\'ed\'b9\'e6\'d4\'f2\'b5\'c4\'b7\'bd\'b7\'a8\'d2\'b2\'d3\'d0\'c1\'bd\'d6\'d6\'a3\'ac\'d2\'bb\'d6\'d6\'ca\'c7\'d4\'da\'b2\'d9\'d7\'f7\'cf\'b5\'cd\'b3\'c9\'cf\'c9\'e8\'d6\'c3\'b0\'fc\'b9\'fd\'c2\'cb\'a3\'ac\'c1\'ed\'d2\'bb\'d6\'d6\'ca\'c7\'d4\'da\'d6\'f7\'bb\'fa\'c9\'cf\'b0\'b2\'d7\'b0\'b7\'c0\'bb\'f0\'c7\'bd\'a1\'a3
\f0 \
freebsd
\f1 \'cf\'c2\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3
\f0 ipfw
\f1 \'c0\'b4\'b7\'c0\'d6\'b9
\f0 ping(icmp)\
\
#include \uc0\u8232 #include \u8232 #include \u8232 #include \u8232 #include \u8232 #include \u8232 #include "inet.h"\u8232 #include "dev.h"\u8232 #include "ip.h"\u8232 #include "route.h"\u8232 #include "protocol.h"\u8232 #include "icmp.h"\u8232 #include "tcp.h"\u8232 #include "skbuff.h"\u8232 #include "sock.h"\u8232 #include \u8232 #include \u8232 #include \u8232 #include \u8232 //
\f1 \'d2\'d4\'c9\'cf\'ce\'aa\'cd\'b7\'ce\'c4\'bc\'fe
\f0 .\
#define min(a,b)\'a0\'a0\'a0\'a0 ((a)<(b)?(a):(b))//
\f1 \'ba\'ea\'b6\'a8\'d2\'e5
\f0  
\f1 \'c7\'f3
\f0 a
\f1 \'a1\'a2
\f0 b
\f1 \'b5\'c4\'d7\'ee\'d0\'a1\'d6\'b5
\f0 \uc0\u8232 /* An array of errno for error messages from dest unreach. */\u8232 //
\f1 \'d2\'bb\'b8\'f6\'ca\'fd\'d7\'e9
\f0 \'97\'97errno
\f1 \'a3\'a8\'b7\'e2\'d7\'b0\'d4\'da\'bd\'e1\'b9\'b9\'cc\'e5\'c4\'da\'b5\'c4\'b8\'b4\'ba\'cf\'ca\'fd\'be\'dd\'c0\'e0\'d0\'cd\'a3\'a9\'d3\'c3\'c0\'b4\'b1\'ed\'ca\'be\'b4\'d3\'c4\'bf\'b1\'ea\'d6\'f7\'bb\'fa\'b7\'a2\'c0\'b4\'b5\'c4\'a3\'a8\'c4\'bf\'b1\'ea\'d6\'f7\'bb\'fa\'a3\'a9\'b2\'bb\'bf\'c9\'b4\'ef\'b5\'c4\'b4\'ed\'ce\'f3\'d0\'c5\'cf\'a2
\f0 \uc0\u8232 struct icmp_err icmp_err_convert[] = \{\u8232 /* ICMP
\f1 \'b1\'a8\'ce\'c4\'b2\'bb\'bf\'c9\'b4\'ef\'b4\'fa\'c2\'eb\'d3\'f2\'b3\'a3\'c1\'bf\'b6\'a8\'d2\'e5
\f0  */\uc0\u8232 \'a0 \{ ENETUNREACH,\'a0\'a0\'a0\'a0\'a0 1 \},\'a0\'a0\'a0\'a0\'a0 /*\'a0\'a0 ICMP_NET_UNREACH\'a0\'a0\'a0 */ /* 
\f1 \'cd\'f8\'c2\'e7\'b2\'bb\'bf\'c9\'b4\'ef
\f0  */\uc0\u8232 \'a0 \{ EHOSTUNREACH,\'a0\'a0 1 \},\'a0\'a0\'a0\'a0\'a0 /*\'a0\'a0 ICMP_HOST_UNREACH */ /* 
\f1 \'d6\'f7\'bb\'fa\'b2\'bb\'bf\'c9\'b4\'ef
\f0  */\uc0\u8232 \'a0 \{ ENOPROTOOPT,\'a0\'a0\'a0\'a0\'a0 1 \},\'a0\'a0\'a0\'a0\'a0 /*\'a0\'a0 ICMP_PROT_UNREACH\'a0 */ /* 
\f1 \'d0\'ad\'d2\'e9\'b2\'bb\'bf\'c9\'b4\'ef
\f0  */\uc0\u8232 \'a0 \{ ECONNREFUSED,\'a0\'a0\'a0 1 \},\'a0\'a0\'a0\'a0\'a0 /*\'a0\'a0 ICMP_PORT_UNREACH\'a0 */ /* 
\f1 \'b6\'cb\'bf\'da\'b2\'bb\'bf\'c9\'b4\'ef
\f0  */\uc0\u8232 \'a0 \{ EOPNOTSUPP,\'a0\'a0\'a0\'a0\'a0\'a0\'a0 0 \},\'a0\'a0\'a0\'a0\'a0 /*\'a0\'a0 ICMP_FRAG_NEEDED\'a0\'a0\'a0 */ /* 
\f1 \'d0\'e8\'c9\'e8\'d6\'c3
\f0 DF
\f1 \'ce\'bb
\f0 ,
\f1 \'b7\'d6\'b6\'ce
\f0  */\uc0\u8232 \'a0 \{ EOPNOTSUPP,\'a0\'a0\'a0\'a0\'a0\'a0\'a0 0 \},\'a0\'a0\'a0\'a0\'a0 /*\'a0\'a0 ICMP_SR_FAILED\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 */ /* 
\f1 \'d4\'b4\'c2\'b7\'d3\'c9\'ca\'a7\'b0\'dc
\f0  */\uc0\u8232 \'a0 \{ ENETUNREACH,\'a0\'a0\'a0\'a0\'a0 1 \},\'a0\'a0\'a0\'a0\'a0 /* ICMP_NET_UNKNOWN\'a0 */ /* 
\f1 \'ce\'b4\'d6\'aa\'cd\'f8\'c2\'e7
\f0 */\uc0\u8232 \'a0 \{ EHOSTDOWN,\'a0\'a0\'a0\'a0\'a0\'a0\'a0 1 \},\'a0\'a0\'a0\'a0\'a0 /*\'a0\'a0 ICMP_HOST_UNKNOWN\'a0\'a0\'a0\'a0\'a0 */ /* 
\f1 \'ce\'b4\'d6\'aa\'d6\'f7\'bb\'fa
\f0  */\uc0\u8232 \'a0 \{ ENONET,\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 1 \},\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 /*\'a0\'a0\'a0 ICMP_HOST_ISOLATED *//* 
\f1 \'d4\'b4\'d6\'f7\'bb\'fa\'b1\'bb\'b8\'f4\'c0\'eb
\f0  */\uc0\u8232 \'a0 \{ ENETUNREACH,\'a0\'a0\'a0\'a0\'a0 1 \},\'a0\'a0\'a0\'a0\'a0 /*\'a0\'a0 ICMP_NET_ANO\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 *//* 
\f1 \'b4\'d3\'b9\'dc\'c0\'ed\'c9\'cf\'bd\'fb\'d6\'b9\'d3\'eb\'c4\'bf\'b5\'c4\'cd\'f8\'cd\'a8\'d0\'c5
\f0  */\uc0\u8232 \'a0 \{ EHOSTUNREACH,\'a0\'a0 1 \},\'a0\'a0\'a0\'a0\'a0 /*\'a0\'a0 ICMP_HOST_ANO\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 *//*
\f1 \'b4\'d3\'b9\'dc\'c0\'ed\'c9\'cf\'bd\'fb\'d6\'b9\'d3\'eb\'c4\'bf\'b5\'c4\'d6\'f7\'bb\'fa\'cd\'a8\'d0\'c5
\f0 */\uc0\u8232 \'a0 \{ EOPNOTSUPP,\'a0\'a0\'a0\'a0\'a0\'a0\'a0 0 \},\'a0\'a0\'a0\'a0\'a0 /*\'a0\'a0 ICMP_NET_UNR_TOS\'a0\'a0\'a0 *//*
\f1 \'b6\'d4\'b7\'fe\'ce\'f1\'c6\'f7\'c0\'e0\'d0\'cd\'a3\'ac\'cd\'f8\'c2\'e7\'b2\'bb\'bf\'c9\'b4\'ef
\f0  */\uc0\u8232 \'a0 \{ EOPNOTSUPP,\'a0\'a0\'a0\'a0\'a0\'a0\'a0 0 \} /*\'a0\'a0 ICMP_HOST_UNR_TOS *//* 
\f1 \'b6\'d4\'b7\'fe\'ce\'f1\'c0\'e0\'d0\'cd\'a3\'ac\'d6\'f7\'bb\'fa\'b2\'bb\'bf\'c9\'b4\'ef
\f0  */\uc0\u8232 \};\
/* Display the contents of an ICMP header. */\uc0\u8232 //
\f1 \'cf\'d4\'ca\'be
\f0 ICMP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'cd\'b7\'b2\'bf\'c4\'da\'c8\'dd\'d0\'c5\'cf\'a2
\f0 \uc0\u8232 static void\u8232 print_icmp(struct icmphdr *icmph) //
\f1 \'b4\'f2\'d3\'a1
\f0 icmp//\uc0\u8232 \{\u8232 \'a0 if (inet_debug != DBG_ICMP) return;\u8232 //
\f1 \'c5\'d0\'b6\'cf
\f0 IP
\f1 \'cd\'b7\'b2\'bf
\f0 Protol
\f1 \'d3\'eb
\f0 ICMP
\f1 \'b5\'c4\'cd\'b7\'b2\'bf\'b5\'c4
\f0 Protol
\f1 \'d3\'f2\'d6\'b5\'cf\'e0\'cd\'ac\'a3\'ac\'cb\'b5\'c3\'f7
\f0 IP
\f1 \'ca\'fd\'be\'dd\'b1\'a8\'d7\'b0\'d4\'d8\'b5\'c4\'ca\'c7
\f0 ICMP
\f1 \'b1\'a8\'ce\'c4
\f0 \uc0\u8232 \'a0\u8232 \'a0 printk("ICMP: type = %d, code = %d, checksum = %X\\n",\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 icmph->type, icmph->code, icmph->checksum);\u8232 \'a0//
\f1 \'ca\'e4\'b3\'f6
\f0 ICMP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'d6\'d0\'b5\'c4\'c0\'e0\'d0\'cd\'a3\'ac\'b4\'fa\'c2\'eb\'a3\'ac\'d0\'a3\'d1\'e9\'ba\'cd
\f0 \uc0\u8232 \'a0 printk("\'a0\'a0\'a0\'a0\'a0 gateway = %s\\n", in_ntoa(icmph->un.gateway)); \u8232 //
\f1 \'ca\'e4\'b3\'f6\'b4\'e6\'b7\'c5\'d4\'da\'cc\'d7\'bd\'d3\'bf\'da\'ca\'b5\'cf\'d6\'cb\'f9\'b7\'d6\'c5\'e4\'b5\'c4\'c4\'da\'b4\'e6\'d6\'d0\'b5\'c4\'cd\'f8\'b9\'d8
\f0 \uc0\u8232 \}\u8232 \'a0\u8232 /* Send an ICMP message. */\u8232 //
\f1 \'b7\'a2\'cb\'cd
\f0 ICMP
\f1 \'ca\'fd\'be\'dd\'b0\'fc
\f0 \uc0\u8232 void\u8232 icmp_send(struct sk_buff *skb_in, int type, int code, struct device *dev)\u8232 //icmp
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'b7\'e2\'d7\'b0\'d4\'da
\f0 ip
\f1 \'ca\'fd\'be\'dd\'b1\'a8\'ce\'c4\'d6\'d0\'b7\'a2\'cb\'cd
\f0 \{\uc0\u8232 \'a0 struct sk_buff *skb; //
\f1 \'b6\'a8\'d2\'e5\'bb\'ba\'b4\'e6\'bd\'e1\'b9\'b9
\f0 \uc0\u8232 \'a0 struct iphdr *iph; //
\f1 \'b6\'a8\'d2\'e5\'a3\'c9\'a3\'d0\'cd\'b7\'b2\'bf
\f0 \uc0\u8232 \'a0 int offset; //
\f1 \'b6\'a8\'d2\'e5\'c6\'ab\'d2\'c6\'c1\'bf
\f0 \uc0\u8232 \'a0 struct icmphdr 
\f1 \'a1\'a1
\f0 *icmph; //
\f1 \'b6\'a8\'d2\'e5
\f0 ICMP
\f1 \'cd\'b7\'b2\'bf
\f0 \uc0\u8232 \'a0 int len; //
\f1 \'b6\'a8\'d2\'e5\'a3\'c9\'a3\'d0\'ca\'fd\'be\'dd\'b1\'a8\'b3\'a4\'b6\'c8
\f0 \uc0\u8232 //
\f1 \'b7\'a2\'cb\'cd
\f0 ICMP
\f1 \'b1\'a8\'ce\'c4\'a3\'a8\'b7\'e2\'d7\'b0\'d4\'da
\f0 TCP/IP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'d6\'d0\'a3\'a9
\f0 \uc0\u8232 \'a0 DPRINTF((DBG_ICMP, "icmp_send(skb_in = %X, type = %d, code = %d, dev=%X)\\n",\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 skb_in, type, code, dev));\u8232 \'a0\u8232 \'a0 /* Get some memory for the reply. */
\f1 \'b5\'dd\'b9\'e9\'d3\'ef\'be\'e4
\f0 \uc0\u8232 //
\f1 \'b4\'d3\'bb\'d8\'b8\'b4\'b0\'fc\'d6\'d0\'b5\'c3\'b5\'bd\'d2\'bb\'d0\'a9\'d0\'c5\'cf\'a2
\f0 \uc0\u8232 \'a0 len = sizeof(struct sk_buff)
\f1 \'a3\'a8\'b0\'fc\'cd\'b7\'a3\'a9
\f0  + dev->hard_header_len 
\f1 \'a3\'a8\'ca\'fd\'be\'dd\'d7\'d6\'b6\'ce\'b3\'a4\'b6\'c8\'a3\'a9
\f0 +\uc0\u8232 \'a0\'a0\'a0 sizeof(struct iphdr)
\f1 \'a3\'a8
\f0 IP
\f1 \'ca\'fd\'be\'dd\'b1\'a8\'b3\'a4\'b6\'c8\'a3\'a9
\f0  + sizeof(struct icmphdr)
\f1 \'a3\'a8\'a3\'c9\'a3\'c3\'a3\'cd\'a3\'d0\'b5\'c4\'c7\'b0\'a3\'b8\'b8\'f6\'d7\'d6\'bd\'da\'a3\'a9
\f0  +
\f1 \'a3\'a8
\f0 sizeof(struct iphdr) + 8
\f1 \'a3\'a9\'a3\'a8\'a3\'c9\'a3\'d0\'ca\'fd\'be\'dd\'b1\'a8\'ca\'d7\'b2\'bf\'d2\'d4\'ba\'f3\'b5\'c4\'a3\'b8\'b8\'f6\'d7\'d6\'bd\'da\'a3\'a9
\f0 ;/* amount of header to return *///
\f1 \'bc\'c6\'cb\'e3\'a3\'c9\'a3\'d0\'ca\'fd\'be\'dd\'b1\'a8\'b3\'a4\'b6\'c8
\f0 \'a0 \uc0\u8232 \'a0\u8232 skb = (struct sk_buff *) alloc_skb(len, GFP_ATOMIC);//
\f1 \'d4\'da
\f0 IP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'d6\'d0\'a3\'ac\'ce\'aa\'b0\'fc\'cd\'b7\'b7\'d6\'c5\'e4\'c4\'da\'b4\'e6\'bf\'d5\'bc\'e4
\f0 \uc0\u8232 \'a0 if (skb == NULL) //
\f1 \'c5\'d0\'b6\'cf\'d2\'d4\'c9\'cf\'b5\'c4\'c4\'da\'b4\'e6\'c9\'ea\'c7\'eb\'ca\'c7\'b7\'f1\'b3\'c9\'b9\'a6
\f0 \uc0\u8232 \'a0\'a0\'a0\'a0 return;\u8232 \'a0\u8232 \'a0 skb->sk = NULL;//
\f1 \'b0\'fc\'cd\'b7\'cb\'f9\'d6\'b8\'cf\'f2\'b5\'c4\'cd\'b7\'d6\'b8\'d5\'eb
\f0 \uc0\u8232 \'a0 skb->mem_addr = skb; //
\f1 \'b0\'fc\'cd\'b7\'d4\'da\'c6\'ac\'d6\'d0\'b5\'c4\'b5\'d8\'d6\'b7
\f0 \uc0\u8232 \'a0 skb->mem_len = len; //
\f1 \'b0\'fc\'cd\'b7\'b5\'c4\'b3\'a4\'b6\'c8
\f0 \uc0\u8232 \'a0 len -= sizeof(struct sk_buff); //
\f1 \'b0\'fc\'cd\'b7\'b5\'c4\'b3\'a4\'b6\'c8\'b5\'c8\'d3\'da
\f0 \uc0\u8232 \'a0\u8232 \'a0 /* Find the IP header. */\u8232 //
\f1 \'bc\'c6\'cb\'e3
\f0 IP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'cd\'b7\'b2\'bf
\f0 \uc0\u8232 \'a0 iph = (struct iphdr *) (skb_in->data + dev->hard_header_len);\u8232 \'a0\u8232 \'a0 /* Build Layer 2-3 headers for message back to source. */\u8232 \'a0 offset = ip_build_header(skb, dev->pa_addr, iph->saddr,\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 &dev, IPPROTO_ICMP, NULL, len, skb_in->ip_hdr->tos,255);\u8232 //
\f1 \'bc\'c6\'cb\'e3\'c6\'ab\'d2\'c6\'c1\'bf
\f0 offset\uc0\u8232 \'a0 if (offset < 0) \{//
\f1 \'b5\'b1
\f0 offset<0
\f1 \'ca\'b1\'bd\'f8\'d0\'d0\'c8\'e7\'cf\'c2\'b2\'d9\'d7\'f7
\f0 \uc0\u8232 \'a0\'a0\'a0\'a0\'a0 skb->sk = NULL;//
\f1 \'d6\'b8\'d5\'eb\'c7\'e5\'bf\'d5
\f0 \uc0\u8232 \'a0\'a0\'a0\'a0\'a0 kfree_skb(skb, FREE_READ); //
\f1 \'b2\'e9\'bf\'b4\'bd\'d3\'ca\'d5\'bb\'ba\'b4\'e6\'bb\'b9\'b9\'bb\'b2\'bb\'b9\'bb
\f0 \uc0\u8232 \'a0\'a0\'a0\'a0\'a0 return;\u8232 \'a0 \}\u8232 \'a0\u8232 \'a0 /* Re-adjust length according to actual IP header size. */\u8232 //
\f1 \'b8\'f9\'be\'dd\'ca\'b5\'bc\'ca
\f0 IP
\f1 \'cd\'b7\'b2\'bf\'b4\'f3\'d0\'a1\'d6\'d8\'d0\'c2\'b5\'f7\'d5\'fb
\f0 IP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'b3\'a4\'b6\'c8
\f0 \uc0\u8232 \'a0 skb->len = offset + sizeof(struct icmphdr) + sizeof(struct iphdr) + 8;//
\f1 \'d6\'d8\'d0\'c2\'bc\'c6\'cb\'e3\'b3\'a4\'b6\'c8
\f0 \uc0\u8232 \'a0 icmph = (struct icmphdr *) (skb->data + offset);// //
\f1 \'d6\'d8\'d0\'c2\'bc\'c6\'cb\'e3
\f0 icmp
\f1 \'b0\'fc\'cd\'b7\'b2\'bf\'b3\'a4\'b6\'c8
\f0 \uc0\u8232 \'a0 icmph->type = type; //
\f1 \'d6\'d8\'d0\'c2\'bc\'c6\'cb\'e3
\f0 icmp
\f1 \'b0\'fc\'cd\'b7\'c0\'e0\'d0\'cd
\f0 \uc0\u8232 \'a0 icmph->code = code; //
\f1 \'d6\'d8\'d0\'c2\'bc\'c6\'cb\'e3
\f0 icmp
\f1 \'b0\'fc\'cd\'b7\'b4\'fa\'c2\'eb
\f0 \uc0\u8232 \'a0 icmph->checksum = 0; //
\f1 \'d6\'d8\'d0\'c2\'bc\'c6\'cb\'e3
\f0 icmp
\f1 \'b0\'fc\'cd\'b7\'d0\'a3\'d1\'e9\'ba\'cd
\f0 \uc0\u8232 \'a0 icmph->un.gateway = 0;// icmph->un.gateway
\f1 \'c7\'e5
\f0 0\uc0\u8232 \'a0 memcpy(icmph + 1, iph, sizeof(struct iphdr) + 8);//
\f1 \'c4\'da\'b4\'e6\'b8\'b4\'d6\'c6\'b2\'d9\'d7\'f7
\f0 \uc0\u8232 \'a0\u8232 \'a0 icmph->checksum = ip_compute_csum((unsigned char *)icmph,\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 sizeof(struct icmphdr) + sizeof(struct iphdr) + 8);\u8232 //
\f1 \'d6\'d8\'d0\'c2\'bc\'c6\'cb\'e3
\f0 icmp
\f1 \'b0\'fc\'cd\'b7\'d0\'a3\'d1\'e9\'ba\'cd
\f0 \uc0\u8232 \'a0 DPRINTF((DBG_ICMP, ">>\\n"));\u8232 \'a0 print_icmp(icmph);//
\f1 \'ca\'e4\'b3\'f6
\f0 icmp
\f1 \'cd\'b7\'b2\'bf\'d0\'c5\'cf\'a2
\f0 \uc0\u8232 \'a0 /* Send it and free it. */
\f1 \'a3\'af
\f0 /
\f1 \'bd\'ab
\f0 IP
\f1 \'b0\'fc\'b7\'a2\'cb\'cd\'b2\'a2\'c7\'e5\'c0\'ed\'c4\'da\'b4\'e6\'bf\'d5\'bc\'e4
\f0 \uc0\u8232 \'a0 ip_queue_xmit(NULL, dev, skb, 1);\u8232 \}\u8232 \'a0\u8232 
\f1 \'b9\'a6\'c4\'dc\'a3\'ba\'a3\'a8\'cf\'ec\'d3\'a6\'d7\'b4\'cc\'ac\'a3\'a9\'b7\'a2\'cb\'cd
\f0 ICMP
\f1 \'b1\'a8\'ce\'c4\'a1\'a3
\f0 \uc0\u8232 1
\f1 \'a3\'ae
\f0 Skb
\f1 \'bd\'e1\'b9\'b9\'b5\'c4\'b0\'fc\'c0\'e0\'d0\'cd\'b2\'bb\'ca\'c7\'b1\'be\'bb\'fa\'a3\'a8\'ce\'ef\'c0\'ed\'b6\'e0\'b2\'a5\'bb\'f2\'b9\'e3\'b2\'a5\'a3\'a9\'a3\'ac\'d4\'f2\'b7\'b5\'bb\'d8\'a1\'a3
\f0 \uc0\u8232 2
\f1 \'a3\'ae\'bc\'ec\'b2\'e9
\f0 IP
\f1 \'b5\'c4\'c4\'bf\'b1\'ea\'b5\'d8\'d6\'b7\'a3\'ac\'ca\'c7\'b9\'e3\'b2\'a5\'bb\'f2\'b6\'e0\'b2\'a5\'a3\'ac\'d4\'f2\'b7\'b5\'bb\'d8\'a1\'a3
\f0 \uc0\u8232 3
\f1 \'a3\'ae
\f0 IP fragment
\f1 \'b2\'bb\'ca\'c7\'b5\'da\'d2\'bb\'b8\'f6\'a3\'a8\'b2\'bb\'b4\'a6\'c0\'ed\'a3\'a9\'a3\'ac\'b7\'b5\'bb\'d8\'a1\'a3
\f0 \uc0\u8232 4
\f1 \'a3\'ae\'d5\'e2\'b8\'f6
\f0 ICMP
\f1 \'b5\'c4\'c0\'e0\'d0\'cd\'b4\'f3\'d3\'da
\f0 18
\f1 \'bb\'f2
\f0 error
\f1 \'d3\'f2\'b2\'bb\'ce\'aa\'bf\'d5\'a3\'ac\'b7\'b5\'bb\'d8\'a1\'a3
\f0 \uc0\u8232 5
\f1 \'a3\'ae\'d4\'da\'c3\'bb\'d3\'d0\'b6\'a8\'d2\'e5
\f0 \'93
\f1 \'ce\'de\'cf\'de\'d6\'c6
\f0 \'94
\f1 \'cc\'f5\'bc\'fe\'cf\'c2\'a3\'ac\'d3\'d0\'cf\'de\'d6\'c6\'d4\'f2\'b7\'b5\'bb\'d8\'a1\'a3
\f0 \uc0\u8232 6
\f1 \'a3\'ae
\f0 IP
\f1 \'c4\'bf\'b1\'ea\'b5\'d8\'d6\'b7\'b2\'bb\'ca\'c7\'b1\'be\'c9\'e8\'b1\'b8\'b5\'d8\'d6\'b7\'ba\'cd\'b1\'be\'bb\'fa\'b5\'d8\'d6\'b7\'a3\'ac\'d2\'d4\'c9\'e8\'b1\'b8\'b5\'d8\'d6\'b7\'d7\'f7\'d4\'b4\'b5\'d8\'d6\'b7\'c8\'eb\'b2\'ce\'b5\'f7\'d3\'c3
\f0 ip_options_echo
\f1 \'a3\'a8\'d4\'da
\f0 IP_OPTIONS.C
\f1 \'d6\'d0\'b6\'a8\'d2\'e5\'a3\'a9\'a3\'ac\'b7\'f1\'d4\'f2\'d2\'d4
\f0 IP
\f1 \'c4\'bf\'b1\'ea\'b5\'d8\'d6\'b7\'ce\'aa\'d4\'b4\'b5\'d8\'d6\'b7\'c8\'eb\'b2\'ce\'b5\'f7\'d3\'c3\'a3\'ac\'bd\'e1\'b9\'fb\'b2\'bb\'ce\'aa
\f0 0
\f1 \'a3\'a8\'b3\'f6\'b4\'ed\'a3\'a9\'a3\'ac\'b7\'b5\'bb\'d8\'a1\'a3
\f0 \uc0\u8232 7
\f1 \'a3\'ae\'ce\'aa
\f0 ICMP
\f1 \'cd\'b7\'d7\'bc\'b1\'b8\'ca\'fd\'be\'dd\'a3\'a8\'b3\'a4\'b6\'c8\'b2\'bb\'b4\'f3\'d3\'da
\f0 576
\f1 \'a3\'a9\'a1\'a3
\f0 \uc0\u8232 8
\f1 \'a3\'ae\'b5\'f7\'d3\'c3
\f0 icmp_build_xmit
\f1 \'a3\'ac\'bd\'a8\'c1\'a2\'ba\'cd\'b7\'a2\'cb\'cd
\f0 ICMP
\f1 \'b1\'a8\'ce\'c4\'a3\'ac\'c8\'f4\'ce\'aa
\f0 \'93
\f1 \'b4\'ed\'ce\'f3\'b1\'a8\'ce\'c4
\f0 \'94
\f1 \'a3\'ac\'d4\'f2\'d6\'c3\'d3\'c5\'cf\'c8\'bc\'b6\'ce\'aa
\f0 6
\f1 \'a3\'a8\'cd\'f8\'c2\'e7\'bf\'d8\'d6\'c6\'a3\'a9\'a1\'a3
\f0 \uc0\u8232 \u8232 
\f1 \'d0\'a1\'b1\'e0\'d0\'a1\'bd\'e1\'a3\'ba\'d5\'e2\'d2\'bb\'b2\'bf\'b7\'d6\'b5\'c4\'b9\'a6\'c4\'dc\'d6\'f7\'d2\'aa\'ca\'c7\'b7\'a2\'cb\'cd\'d2\'bb\'b8\'f6
\f0 IP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'a3\'ac\'cd\'a8\'b9\'fd\'b7\'b5\'bb\'d8\'b5\'c4
\f0 ICMP
\f1 \'ca\'fd\'be\'dd\'b0\'fc\'c5\'d0\'b6\'cf\'b3\'f6\'cf\'d6\'c1\'cb\'cb\'b5\'c3\'f7\'ce\'ca\'cc\'e2\'a3\'ac\'b8\'f9\'be\'dd\'d5\'e2\'b8\'f6\'ce\'ca\'cc\'e2\'d6\'d8\'d0\'c2\'b7\'a2\'cb\'cd\'a1\'a3
\f0 \
}